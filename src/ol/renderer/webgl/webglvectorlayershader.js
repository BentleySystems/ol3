// This file is automatically generated, do not edit
goog.provide('ol.renderer.webgl.vectorlayer.shader');

goog.require('ol.webgl.shader');



/**
 * @constructor
 * @extends {ol.webgl.shader.Fragment}
 * @struct
 */
ol.renderer.webgl.vectorlayer.shader.Fragment = function() {
  goog.base(this, ol.renderer.webgl.vectorlayer.shader.Fragment.SOURCE);
};
goog.inherits(ol.renderer.webgl.vectorlayer.shader.Fragment, ol.webgl.shader.Fragment);
goog.addSingletonGetter(ol.renderer.webgl.vectorlayer.shader.Fragment);


/**
 * @const
 * @type {string}
 */
ol.renderer.webgl.vectorlayer.shader.Fragment.DEBUG_SOURCE = 'precision mediump float;\n\n\nvoid main(void) {\n  gl_FragColor = vec4(1.0, 1.0, 0.0, 1);\n}\n';


/**
 * @const
 * @type {string}
 */
ol.renderer.webgl.vectorlayer.shader.Fragment.OPTIMIZED_SOURCE = 'precision mediump float;void main(void){gl_FragColor=vec4(1.0,1.0,0.0,1);}';


/**
 * @const
 * @type {string}
 */
ol.renderer.webgl.vectorlayer.shader.Fragment.SOURCE = goog.DEBUG ?
    ol.renderer.webgl.vectorlayer.shader.Fragment.DEBUG_SOURCE :
    ol.renderer.webgl.vectorlayer.shader.Fragment.OPTIMIZED_SOURCE;



/**
 * @constructor
 * @extends {ol.webgl.shader.Vertex}
 * @struct
 */
ol.renderer.webgl.vectorlayer.shader.Vertex = function() {
  goog.base(this, ol.renderer.webgl.vectorlayer.shader.Vertex.SOURCE);
};
goog.inherits(ol.renderer.webgl.vectorlayer.shader.Vertex, ol.webgl.shader.Vertex);
goog.addSingletonGetter(ol.renderer.webgl.vectorlayer.shader.Vertex);


/**
 * @const
 * @type {string}
 */
ol.renderer.webgl.vectorlayer.shader.Vertex.DEBUG_SOURCE = '\nattribute vec2 a_position;\nattribute vec2 a_offsets;\n\nuniform mat4 u_projectionMatrix;\n\nvoid main(void) {\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.) + vec4(a_offsets, 0., 0.);\n}\n\n\n';


/**
 * @const
 * @type {string}
 */
ol.renderer.webgl.vectorlayer.shader.Vertex.OPTIMIZED_SOURCE = 'attribute vec2 a;attribute vec2 b;uniform mat4 c;void main(void){gl_Position=c*vec4(a,0.,1.)+vec4(b,0.,0.);}';


/**
 * @const
 * @type {string}
 */
ol.renderer.webgl.vectorlayer.shader.Vertex.SOURCE = goog.DEBUG ?
    ol.renderer.webgl.vectorlayer.shader.Vertex.DEBUG_SOURCE :
    ol.renderer.webgl.vectorlayer.shader.Vertex.OPTIMIZED_SOURCE;



/**
 * @constructor
 * @param {WebGLRenderingContext} gl GL.
 * @param {WebGLProgram} program Program.
 * @struct
 */
ol.renderer.webgl.vectorlayer.shader.Locations = function(gl, program) {

  /**
   * @type {WebGLUniformLocation}
   */
  this.u_projectionMatrix = gl.getUniformLocation(
      program, goog.DEBUG ? 'u_projectionMatrix' : 'c');

  /**
   * @type {number}
   */
  this.a_offsets = gl.getAttribLocation(
      program, goog.DEBUG ? 'a_offsets' : 'b');

  /**
   * @type {number}
   */
  this.a_position = gl.getAttribLocation(
      program, goog.DEBUG ? 'a_position' : 'a');
};
